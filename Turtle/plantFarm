
local function forward(forwCnt) -- This function is used to get the turtle go forward and handles errors
	if forwCnt == nil then -- if no arg then default is 1 forward
		forwCnt = 1
	end
	while forwCnt > 0 do -- Do this until the forward counter is 0 then end
		if turtle.forward() == false then -- if turtle can't go forward: continue
			if turtle.dig() == true then -- Try to dig way trough
				forward(forwCnt) -- Try to go forward again
				break -- when getting back from newly started forward function: end current function.
			end
			print("ERROR!") -- If the turtle still can't go forward "throw" an error to the user
			print("Press enter to continue")
			io.read()
			forward(forwCnt) -- when user have solved the problem try again to go forward
		else
			forwCnt = forwCnt - 1 -- if the turtle can go forward: make counter 1 less and restart while loop
		end
	end
end

pnt1, cnt2, cnt3 = 1, 0, 0 --Counters and pointers
local arg = ( ... ) -- Check for Arguments
arg = tonumber(arg) -- make arg to number
term.clear()
term.setCursorPos(1,1) -- Clears screen

area = arg * arg
amount = area / 2
stacks = amount /64
stacksInt = string.format("%u", stacks)
remainder = amount % 64

print("You have choosen ", arg) -- Checking if input is correct
print("a ", arg, "X" , arg," farm will use ", amount, " saplings /n This corosponds to ", stacksInt, " stacks and ", remainder, " sapplings")

print("When ready, press the ANY_KEY")
print("To terminate press and hold CTRL + T")
io.read() -- The user can press enter to continue
arg = arg - 1
ARG = arg
arg2 = arg
while arg2 > -1 do
	while arg > 0 do
		forward()
		turtle.placeDown()
		arg = arg - 1
		if arg > 0 then
			forward()
		end
		arg = arg - 1
	end
	arg = ARG
	if pnt1 == 0 then
		pnt1 = 1
		if answer == "debug" then
		term.clear()
		term.setCursorPos(1,1)
		end
		turtle.turnLeft()
		forward()
		turtle.turnLeft()
	elseif pnt1 == 1 then
		pnt1 = 0
		if answer == "debug" then
		term.clear()
		term.setCursorPos(1,1)
		end
		turtle.turnRight()
		forward()
		turtle.turnRight()
	end
	arg2 = arg2 - 1
	if answer == "debug" then
		term.clear()
		term.setCursorPos(1,1)
		end
end
turtle.placeDown()
if pnt1 == 1 then
	turtle.turnRight()
end
turtle.down()