local arg = { ... } -- retreiving Arguments
-- Functions Start
function turnRight(arg)
	if arg == nil then
		print("if arg == nil TRUE")
		arg = 1
	end
	print(arg)
	while arg > 0 do
		arg = arg - 1
		if turtle.turnRight() then
			if turn == "front" then
				turn = "right"
			elseif turn == "right" then
				turn = "back"
			elseif turn == "back" then
				turn = "left"
			elseif turn == "left" then
				turn = "front"
			end
		else
			return false
		end
	end
	return true
end
function turnLeft()
print("turnLeft")
end
---------------------------------------------------------
function empty()

end
---------------------------------------------------------
-- Functions End
-- Program Start
-- Preparing Run
count = 1
fill = 0
while not arg[count] = nil do
	count = count + 1
	if count = 1 then
		arg[1] == tonumber(arg[1])
	elseif count == 2 then
		arg[2] = tonumber(arg[2])
	elseif count == 3 then
		arg[3] = tonumber(arg[3])
	elseif arg[count] == "help" or arg[count] == "Help" or arg[count] == "HELP" or arg[count] == "h" or arg[count] == "-h" or arg[count] == "-H" or arg[count] == "H" then
	-- This is the help message witch is activated when one of the arguments is one of the help arguments
		term.clear()
		term.setCursorPos(1,1)
		write("Press enter for next line")
		io.read()
		write("This API is used for building a ") 
		io.read()
		write("cube or plate. You must give the ")
		io.read()
		write("program. The dimensions of the cube")
		io.read()
		write("/plate thatyou wan't it to build. ")
		io.read()
		write("ex:[name_on_program] 2 2 2")
		io.read()
		write("This will make cube with 2 by 2 by")
		io.read()
		write("2 blocks if air inside. This")
		io.read()
		write("program can also build a plate. if")
		io.read()
		write("you wan't the program to build a")
		io.read()
		write("plate just give it 2 arguments")
		io.read()
		write("ex:[name_on_program] 2 2")
		io.read()
		write("This will make a plate with 2 by 2") 
		io.read()
		write("blocks. Remember to give the turtle")
		io.read()
		write("some materials to build of!")
		io.read()
		write("Other accepted arguments are:")
		io.read()
		print()
		write("help, Help, HELP, h, -h, -H, H")
		io.read()
		write("All these shows this message.")
		io.read()
		print()
		write("")
		term.clear()
		term.setCursorPos(1,1)
		return
	elseif arg[count] == "-f" or arg[count] == "-F" then
		fill = true
	else
	print("argument ", arg[count], "where not understanded. Please try again or  read the help section(-h)")
	break
	end
xPos = 0 -- This is the positioning variables used coordinating the turtle {
yPos = 0
zPos = 0 -- }

-- End of Preparing Run
-- Main
-- Writing Dimensions to screen {
write("Length: ")
print(arg[1])
write("Width: ")
print(arg[2])
write("Height: ")
print(arg[3]) 
-- }

turtle.up() -- going to starting position

while xPos < arg[1] do
	turtle.forward()
	turtle.placeDown()
	xPos = xPos + 1
end

function nextRow()


end