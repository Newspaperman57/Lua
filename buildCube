local arg = { ... } -- retreiving Arguments
-- Functions Start
function turnRight(arg)
	if arg == nil then
		print("if arg == nil TRUE")
		arg = 1
	end
	print(arg)
	while arg > 0 do
		arg = arg - 1
		if turtle.turnRight() then -- 
			if turn == "front" then
				turn = "right"
			elseif turn == "right" then
				turn = "back"
			elseif turn == "back" then
				turn = "left"
			elseif turn == "left" then
				turn = "front"
			end
		else
			return false
		end
	end
	return true
end
function turnLeft()
print("turnLeft")
end
-- Functions End
-- Program Start
-- Preparing Run
if arg[1] == "help" or arg[1] == "Help" or arg[1] == "HELP" or arg[1] == "h" or arg[1] == "-h" or arg[1] == "-H" or arg[1] == "H" then
-- This is the help message witch is activated when the 1. argument is one of the help arguments
	term.clear()
	term.setCursorPos(1,1)
	write("Press enter for next line")
	io.read()
	write("This API is used for building a ") 
	io.read()
	write("cube or plate. You must give the ")
	io.read()
	write("program. The dimensions of the cube")
	io.read()
	write("/plate thatyou wan't it to build. ")
	io.read()
	write("ex:[name_on_program] 2 2 2")
	io.read()
	write("This will make cube with 2 by 2 by")
	io.read()
	write("2 blocks if air inside. This")
	io.read()
	write("program can also build a plate. if")
	io.read()
	write("you wan't the program to build a")
	io.read()
	write("plate just give it 2 arguments")
	io.read()
	write("ex:[name_on_program] 2 2")
	io.read()
	write("This will make a plate with 2 by 2") 
	io.read()
	write("blocks. Remember to give the turtle")
	io.read()
	write("some materials to build of!")
	io.read()
	write("Other accepted arguments are:")
	io.read()
	print()
	write("help, Help, HELP, h, -h, -H, H")
	io.read()
	write("All these shows this message.")
	io.read()
	term.clear()
	term.setCursorPos(1,1)
	return
elseif arg[4] ~= nil then -- Checks if there is a 4. argument
	print("ERROR: Too many arguments")
	return
elseif arg[3] == nil then -- Checks if there is not a 3. argument
	print("ERROR: not enough arguments")
	return
end
arg[1] = tonumber(arg[1]) -- Makes all the arguments to numbers {
arg[2] = tonumber(arg[2])
arg[3] = tonumber(arg[3]) -- }
xPos = 1 -- This is the positioning variables used coordinating the turtle {
yPos = 1
zPos = 1 -- }
turn = "front"

-- End of Preparing Run
-- Main
write("Length: ") -- Writing Dimensions to screen {
print(arg[1])
write("Width: ")
print(arg[2])
write("Height: ")
print(arg[3]) -- }
turnRight()

